steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  # Inspect python container
  # Will output /builder/home/.local/bin/
  - name: python
    entrypoint: pwd

  # Check directory
  - name: bash
    args:
      - "-c"
      - |
        ls

  # - name: 'gcr.io/cloud-builders/gcloud'
  #  entrypoint: 'gcloud'
    # gcloud compute regions list
    # gcloud config get compute/zone
    # args: ['compute','regions', 'list']
    # gcloud compute project-info add-metadata \
    # --metadata google-compute-default-region=europe-west1,google-compute-default-zone=europe-west1-b
    # args: ['compute','project-info', 'add-metadata', '\', '--metadata', 'google-compute-default-region=europe-west1,google-compute-default-zone=europe-west1-b']
  #  args: ['config','get', 'compute/zone']

  # Run nbconvert library to convert notebook into Python script
  - name: python
    entrypoint: /builder/home/.local/bin/jupyter
    # nbconvert --to notebook --execute NOTEBOOK_NAME
    # args: ["nbconvert", "--to", "notebook", "--execute", "--allow-errors", "${_NOTEBOOK_NAME}", "2>&1 1>log.out"] 
    args: ["nbconvert", "--to", "notebook", "--execute", "${_NOTEBOOK_NAME}"]

  # Check directory
  - name: bash
    args:
      - "-c"
      - |
        ls

#substitutions:
#    # Added them in the cloud build trigger as well
#    _NOTEBOOK_NAME: inventory_pipeline.ipynb           # default value
#    _ARTIFACT_BUCKET: rax-datascience-dev-modelfactory # default value

serviceAccount: "40046533665-compute@developer.gserviceaccount.com"
# Client service account:    40046533665-compute@developer.gserviceaccount.com
# Our service account:       sa-ds-mf-tf-pv002@rax-datascience-dev.iam.gserviceaccount.com
# options:
#    dynamic_substitutions: true

artifacts:
  objects:
    location: 'gs://${_ARTIFACT_BUCKET}/Ahmed-test/'
    # paths: ['${_NOTEBOOK_NAME}']
    paths: ['forecast_eval_component.yaml', 'inventory_pipeline.ipynb', 'inventory_pipeline.nbconvert.ipynb', 'send_gmail_component.yaml', 'sql_query_component.yaml', 'tab_forecast_pipeline.json']